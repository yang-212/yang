main {
  width: 30vmin;
  height: 30vmin;
  border: 0vmin dashed white;
  position: relative;
  transform-style: preserve-3d;

  --base-transform: rotateX(0deg);
  transform-origin: 50% 50%;
  
  animation: display-case 2000ms infinite linear;
  border-radius: 50%;
}

@media (prefers-reduced-motion) {
  main {
    animation-play-state: paused;
  }
}

@keyframes display-case {
  0% {
    transform: var(--base-transform) rotateZ(0turn);
  }
  100% {
    transform: var(--base-transform) rotateZ(-1turn);
  }
}

.container {
  width: 30vmin;
  height: 30vmin;
  transform-style: preserve-3d;
  transform: rotateY(-.05turn);
  transition: transform 1000ms ease-in-out;
  transform-origin: 50% 50%;
}

.tree {
  width: 3.5vmin;
  height: 1vmin;
  background: hsl(133, 50%, 40%);
  position: absolute;
  top: 50%;
  left: 50%;

  transition: transform 1000ms ease-in-out;

  transform: translate(-50%, -50%) var(--base-rotate, rotateZ(0turn))
    var(--base-offset, translateX(0vmin)) var(--depth, translateZ(0vmin))
    var(--tilt, rotateX(0deg)) scaleY(calc(var(--i) * 0.09));
}
.ornament {
  width: 3vmin;
  height: 3vmin;
  background: hsl(calc(var(--i) * 28), 90%, 54%);
  opacity: 1;
  transition: 1600ms cubic-bezier(1,0,.5,.5);
  transition-property: opacity, transform;
  border-radius: 50%;
  transform-style: preserve-3d;
  
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) var(--base-rotate, rotateZ(0turn))
    var(--base-offset, translateX(0vmin)) var(--depth, translateZ(0vmin))
    var(--tilt, rotateX(0deg) rotateY(0deg));
}
.star {
  width: 8vmin;
  height: 8vmin;
  background: hsl(28, 90%, 54%);
  opacity: 0;
  clip-path: polygon(100% 34%, 10% 90%, 50% 0%, 90% 90%, 0% 34%);
}

[data-steps*="1"] .tree {
  --base-rotate: rotateZ(calc(var(--i) * -30deg));
}

[data-steps*="2"] .tree {
  --base-offset: translateX(calc(var(--i) * -0.325vmin));
}

[data-steps*="3"] .container {
  transform: rotateX(-.275turn) translateZ(30vmin);
}

[data-steps*="4"] .tree {
  --depth: translateZ(calc(calc(var(--length) - var(--i))  * -0.75vmin));
  --tilt: rotateX(calc(var(--i) * 0.1deg + 1deg));
}

[data-steps*="5"] .ornament {
  opacity: 1;
  --base-rotate: rotateZ(calc(var(--i) * -30deg));
  --base-offset: translateX(calc(var(--i) * -0.3725vmin));
  --depth: translateZ(calc(calc(var(--length) - var(--i))  * -0.75vmin));
  --tilt: rotateX(80deg) rotateY(60deg);
  transition-timing-function: cubic-bezier(.5,.5,0,1);
}
[data-steps*="5"] .star {
  opacity: 1;
  --base-rotate: rotateZ(0deg);
  --base-offset: translateX(0vmin);
  --depth: translateZ(calc(90 * -0.75vmin));
  --tilt: rotateX(90deg) rotateY(0deg);
  transition-timing-function: cubic-bezier(.5,.5,0,1);
}
[data-steps*="5"] .star:last-of-type {
  background: hsl(38, 90%, 54%);
  --tilt: rotateX(90deg) rotateY(90deg);
}







body {
  display: flex;
  height: 100vh;
  background-color: #062546;
  justify-content: center;
  align-items: center;
  perspective: 500vmin;
  perspective-origin: 50% 0%;
  overflow: hidden;
  padding-bottom: 4rem;
  font-family: system-ui, -apple-system, 'Segoe UI', sans-serif;
}

form {
  position: absolute;
  bottom: 1rem;
  display: flex;
  flex-direction: column;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

input[type="radio"] {
  opacity: 0;
  position: absolute;
}
label {
  color: white;
}
input + label {
  width: 2.5rem;
  height: 2.5rem;
  border: .125rem solid white;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  margin: 0 .5rem;
  transition: all 300ms linear;
  background: hsla(343,100%,50%,1)
  
}
input:checked + label ~ label {
  opacity: .67;
  border: 0rem solid white;
  scale: .8;
  background: hsla(343,100%,50%,.2)
}
form > div {
  display: flex;
}
form > div:last-child  {
  flex-direction: column;
  margin-top: 1rem;
}